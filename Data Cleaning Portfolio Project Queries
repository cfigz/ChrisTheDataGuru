use new_schema;
#Drop table if exists nashville_housing;
-- Cleaning Data in SQL Queries
SELECT 
    *
FROM
    nashville_housing;

-- Standardize DATE Format

SELECT 
SaleDate, STR_TO_DATE(SaleDate,'%M %d,%Y')
FROM
    nashville_housing;

UPDATE nashville_housing 
SET 
    SaleDate = STR_TO_DATE(SaleDate, '%M %d,%Y');
    
-- Populate Property Address

SELECT 
    ParcelID, PropertyAddress
FROM
    nashville_housing

ORDER BY ParcelID;

SELECT 
    a.ParcelID,
    a.PropertyAddress,
    b.ParcelID,
    b.PropertyAddress,
    IFNULL(a.PropertyAddress, b.PropertyAddress)
    
FROM
    nashville_housing a
        JOIN
    nashville_housing b ON a.ParcelID = b.ParcelID
        AND a.UniqueID <> b.UniqueID;

UPDATE nashville_housing a
        JOIN
    nashville_housing b ON a.ParcelID = a.ParcelID
        AND a.UniqueID <> b.UniqueID 
SET 
    a.PropertyAddress = b.PropertyAddress
WHERE
    a.PropertyAddress IS NULL;

-- Breaking out Address into Individual Columns(Address, City, State)
SELECT 
    OwnerAddress
FROM
    nashville_housing;
    
SELECT 
    OwnerAddress,
    SUBSTRING_INDEX(OwnerAddress,',',1) as OwnerSplitAddress,
    SUBSTRING_INDEX(SUBSTRING_INDEX(OwnerAddress,',',2),',',-1) as OwnerSplitCity,
    SUBSTRING_INDEX(OwnerAddress,',',-1) as OwnerSplitState
    
FROM
    nashville_housing;
    
Alter table nashville_housing
add OwnerSplitAddress varchar(255);

update nashville_housing
set OwnerSplitAddress = SUBSTRING_INDEX(OwnerAddress,',',1);
    

Alter table nashville_housing
add OwnerSplitCity varchar(255);

UPDATE nashville_housing 
SET 
    OwnerSplitCity = SUBSTRING_INDEX(SUBSTRING_INDEX(OwnerAddress, ',', 2),
            ',',
            - 1);


Alter table nashville_housing
add OwnerSplitState varchar(255);

UPDATE nashville_housing 
SET 
    OwnerSplitState = SUBSTRING_INDEX(OwnerAddress, ',', - 1);

-- Change Y and N to Yes and No in "Sold as Vacant" Field
SELECT DISTINCT
    SoldAsVacant, COUNT(SoldAsVacant)
FROM
    nashville_housing
Group by SoldAsVacant
Order by 2;

SELECT 
    SoldAsVacant,
    CASE
    
        WHEN SoldAsVacant = 'Y' THEN 'Yes'
        WHEN SoldAsVacant = 'N' THEN 'No'
        ELSE SoldAsVacant
    END
FROM
    nashville_housing;
    
UPDATE nashville_housing 
SET SoldAsVacant = CASE
        WHEN SoldAsVacant = 'Y' THEN 'Yes'
        WHEN SoldAsVacant = 'N' THEN 'No'
        ELSE SoldAsVacant
    END;
    
    



-- Remove Duplicates

 With rowNumCte as (Select
	Row_number() over (Partition by  ParcelID, PropertyAddress, SalePrice,SaleDate,LegalReference order by UniqueID) row_num 
    from nashville_housing)
    select *
    from rowNumCte where row_num >1;
    
DELETE FROM nashville_housing USING nashville_housing
        JOIN
    rowNumCte ON nashville_housing.UniqueID = rowNumCte.UniqueID 
WHERE
    row_num > 1;

-- DELETE Unused Columns

SELECT 
    *
FROM
    nashville_housing;
    
Alter Table nashville_housing
Drop OwnerAddress,
Drop TaxDistrict,
Drop PropertyAddress,
Drop SaleDate;
